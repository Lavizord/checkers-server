services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    volumes:
      - /home/ec2-user/ssl-gg:/etc/nginx/ssl:ro
      - ./nginx-staging.conf:/etc/nginx/nginx.conf
    depends_on:
      - wsapi
      - restapi
    networks:
      - app-network

  wsapi:
    container_name: wsapi
    build:
      context: ..
      dockerfile: cmd/wsapi/Dockerfile
    expose:
      - "80"
    environment:
      - CONFIG_PATH=/root/config/config.json
    depends_on:
      - redis
    networks:
      - app-network

  restapi:
    container_name: restapiworker
    build:
      context: ..
      dockerfile: cmd/restapiworker/Dockerfile
    expose:
      - "8080"
    networks:
      - app-network
    depends_on:
      - redis
      - postgres

  pstatusworker:
    container_name: pstatusworker
    build:
      context: ..
      dockerfile: cmd/pstatusworker/Dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  roomworker:
    container_name: roomworker
    build:
      context: ..
      dockerfile: cmd/roomworker/Dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  broadcastworker:
    container_name: broadcastworker
    build:
      context: ..
      dockerfile: cmd/broadcastworker/Dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  gameworker:
    container_name: gameworker
    build:
      context: ..
      dockerfile: cmd/gameworker/Dockerfile
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: checkersdb
      POSTGRES_DB: checkers
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
